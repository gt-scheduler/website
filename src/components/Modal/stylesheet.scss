@import '../../variables.scss';

.modal-backdrop {
  position: fixed;
  z-index: 1040;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: $modal-backdrop-color;

  // Add the styles to make the modal backdrop fade in when appearing
  // These are based on the required styles from CSSTransition:
  // http://reactcommunity.org/react-transition-group/css-transition
  $transition: 'modal-transition--fade';
  &.#{$transition}-appear-active,
  &.#{$transition}-exit-active {
    transition: opacity 200ms linear;
  }
  &.#{$transition}-appear {
    opacity: 0;
  }
  &.#{$transition}-appear-active {
    opacity: 1;
  }
  &.#{$transition}-exit {
    opacity: 1;
  }
  &.#{$transition}-exit-active {
    opacity: 0;
  }
}

.modal-positioner {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1041;
  width: 100%;
  height: 100%;
  overflow: hidden;

  // Center align the child
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  // Ignore pointer-events on the parent,
  // but re-enable on all direct children.
  pointer-events: none;
  & > * {
    pointer-events: all;
  }

  // Prevent the modal from having a focus outline
  // when it gets auto-focused upon being shown.
  outline: none;

  // Add the styles to make the modal fade in & zoom when appearing
  // These are based on the required styles from CSSTransition:
  // http://reactcommunity.org/react-transition-group/css-transition
  $transition: 'modal-transition--fade-zoom';
  &.#{$transition}-appear-active,
  &.#{$transition}-exit-active {
    transition: opacity 200ms linear,
      transform 200ms cubic-bezier(0.1, 0.8, 0.6, 1.3);
  }
  &.#{$transition}-appear-active {
    transition-property: transform, opacity;
  }
  &.#{$transition}-exit-active {
    // Don't scale down when disappearing
    transition-property: opacity;
  }
  &.#{$transition}-appear {
    opacity: 0;
    transform: scale(0.25);
  }
  &.#{$transition}-appear-active {
    opacity: 1;
    transform: none;
  }
  &.#{$transition}-exit {
    opacity: 1;
    transform: none;
  }
  &.#{$transition}-exit-active {
    opacity: 0;
    // Don't scale down when disappearing
    transform: none;
  }
}

.modal {
  position: relative;
  overflow-y: auto;
  // width is passed in as an inline style

  // Add a minimum gaps to the top/bottom and left/right
  --min-x-gap: 12px;
  --min-y-gap: 20px;
  max-width: calc(100vw - (var(--min-x-gap) * 2));
  max-height: calc(100vh - (var(--min-y-gap) * 2));

  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  border-radius: 10px;

  @include light {
    background-color: $theme-light-background;
    color: $modal-foreground-color-light;
  }

  @include dark {
    background-color: $theme-dark-background;
    color: $modal-foreground-color-dark;
  }

  &__content {
    padding: 20px;
    text-align: left;

    %fix-margins {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }

    p {
      @extend %fix-margins;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 800;
      text-align: center;
      @extend %fix-margins;

      @include light {
        color: $modal-foreground-color-light;
      }

      @include dark {
        color: $modal-foreground-color-dark;
      }
    }

    a {
      transition: all 0.33s ease;

      @include light {
        color: #bb5b4a;
      }

      @include dark {
        color: #f37f6a;
      }

      &:hover {
        text-decoration: underline;

        @include light {
          color: #c57e3c;
        }

        @include dark {
          color: #ffaa5a;
        }
      }
    }

    pre {
      font-size: 0.9rem;
    }
  }

  &__footer {
    padding: 16px 20px;
    text-align: center;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 16px;

    // Position the footer at the bottom and make it sticky
    // (always above the content even if the content scrolls).
    position: sticky;
    bottom: 0;
    z-index: 4;

    @include light {
      background-color: scale-color($theme-light-background, $lightness: -15%);
    }

    @include dark {
      background-color: scale-color($theme-dark-background, $lightness: -20%);
    }
  }

  &__button {
    padding: 10px 24px;
    border: none;
    font-weight: 600;
    font-size: 14px;
    cursor: pointer;

    box-shadow: 0px 0px 20px #00000033;
    transition: all 0.33s ease;
    border: 2px solid;
    border-radius: 8px;

    --color: #d36855;
    &:hover {
      --color: #e2944b;
    }

    &--normal {
      border-color: var(--color);
      background-color: var(--color);
      color: white;
    }

    &--cancel {
      border-color: var(--color);
      background-color: transparent;
      color: currentColor;

      @include dark {
        color: #eeeeee;

        &:hover {
          background-color: rgba(255, 255, 255, 0.15);
        }
      }
    }
  }
}
